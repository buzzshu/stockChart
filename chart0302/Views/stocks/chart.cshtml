@model IEnumerable<chart0302.Models.stocks>

@{
    ViewBag.Title = ViewBag.id;
}

<style>
    .con{
        width:500px;
    }
    .canvasjs-chart-credit {
        display: none !important;
    }
</style>
<script type="text/javascript" src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.stock.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.5.1/dist/chart.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.js"></script>

<body>
    <h2>@ViewBag.id</h2>
    @*<div class="con">
        <canvas id="myChart"></canvas>
    </div>*@
    <div id="chartContainer" style="height: 500px; width: 100%;"></div>

</body>
<script type="text/javascript">
    var model = @Html.Raw(Json.Encode(Model));
    //var stockPrice = [];
    //for (var i = 0; i < model.length; i++) {
    //    // stockPrice.push([i, model[i].endPrice])
    //    var date = model[i].stockDate.substring(0, 4) + "-" + model[i].stockDate.substring(4, 6) + "-" + model[i].stockDate.substring(6, 8);
    //    stockPrice.push([new Date(date), model[i].endPrice]);
    //}

    //console.log(stockPrice)

    //var ctx = document.getElementById("myChart");
    //var myChart = new Chart(ctx, {
    //    type: 'scatter',
    //    data: {
    //        datasets: [
    //            {
    //                label: 'EndPrice',
    //                data: stockPrice,
    //                fill: false,
    //                borderColor: 'rgb(75, 192, 192)',
    //                // interpolate: true,
    //                lineTension: 0,
    //                showLine: true,
    //                pointRadius: 0
    //            }
    //        ]
    //    },
    //    options: {
    //        scales: {
    //            x: {
    //                ticks: {
    //                    // Include a dollar sign in the ticks
    //                    callback: function (label, index, labels) {
    //                        return moment(label).format("YYYY/MM/DD");
    //                    }
    //                }
    //            }
    //        }
    //    }
    //});

    // plot2
    var dataPoints1 = [], dataPoints2 = [], dataPoints3 = [];
    
    var stockChart = new CanvasJS.StockChart("chartContainer", {
        exportEnabled: true,
        theme: "light2",
        title: {
            text: "StockChart with Tooltip & Crosshair Syncing"
        },
        charts: [{
            toolTip: {
                shared: true
            },
            axisX: {
                lineThickness: 5,
                tickLength: 0,
                labelFormatter: function (e) {
                    return "";
                },
                crosshair: {
                    enabled: true,
                    snapToDataPoint: true,
                    labelFormatter: function (e) {
                        return ""
                    }
                }
            },
            axisY2: {
                title: "Price",
                prefix: "$"
            },
            legend: {
                verticalAlign: "top",
                horizontalAlign: "left"
            },
            data: [{
                name: "Price",
                yValueFormatString: "$#,###.##",
                axisYType: "secondary",
                type: "candlestick",
                risingColor: "green",
                fallingColor: "red",
                dataPoints: dataPoints1
            }]
        }
            , {
            height: 100,
            toolTip: {
                shared: true
            },
            axisX: {
                crosshair: {
                    enabled: true,
                    snapToDataPoint: true
                }
            },
            axisY2: {
                prefix: "$",
                title: "VOLUME"
            },
            legend: {
                horizontalAlign: "left"
            },
            data: [{
                yValueFormatString: "$#,###.##",
                axisYType: "secondary",
                name: "VOLUME",
                dataPoints: dataPoints2
            }]
        }
        ]
        ,
        navigator: {
            data: [{
                color: "grey",
                dataPoints: dataPoints3
            }],
            slider: {
                minimum: new Date(2021, 01, 01),
                maximum: new Date(2021, 12, 31)
            }
        }
    });

    for (var i = 0; i < model.length; i++) {

        var date = model[i].stockDate.substring(0, 4) + "-" + model[i].stockDate.substring(4, 6) + "-" + model[i].stockDate.substring(6, 8);
        dataPoints1.push({ x: new Date(date), y: [Number(model[i].openPrice), Number(model[i].highPrice), Number(model[i].lowPrice), Number(model[i].endPrice)], color: model[i].openPrice < model[i].endPrice ? "green" : "red" });

        // check 成交量?
        dataPoints2.push({ x: new Date(date), y: Number(model[i].numOfTrade.replace(/,/g, "")), color: model[i].openPrice < model[i].endPrice ? "green" : "red" });

        dataPoints3.push({ x: new Date(date), y: Number(model[i].endPrice) });
    }
    console.log(dataPoints2);
    stockChart.render();

</script>

